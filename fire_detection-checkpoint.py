{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "64d10f0e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import cv2\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    " \n",
    "\n",
    "live_Camera = cv2.VideoCapture(0)\n",
    "\n",
    " \n",
    "\n",
    "lower_bound = np.array([11,33,111])\n",
    "\n",
    "upper_bound = np.array([90,255,255])\n",
    "\n",
    " \n",
    "\n",
    "while(live_Camera.isOpened()):\n",
    "\n",
    "    ret, frame = live_Camera.read()\n",
    "\n",
    "    frame = cv2.resize(frame,(1280,720))\n",
    "\n",
    "    frame = cv2.flip(frame,1)\n",
    "\n",
    " \n",
    "\n",
    "    frame_smooth = cv2.GaussianBlur(frame,(7,7),0)\n",
    "\n",
    " \n",
    "\n",
    "    mask = np.zeros_like(frame)\n",
    "\n",
    "   \n",
    "\n",
    "    mask[0:720, 0:1280] = [255,255,255]\n",
    "\n",
    " \n",
    "\n",
    "    img_roi = cv2.bitwise_and(frame_smooth, mask)\n",
    "\n",
    " \n",
    "\n",
    "    frame_hsv = cv2.cvtColor(img_roi,cv2.COLOR_BGR2HSV)\n",
    "\n",
    " \n",
    "\n",
    "    image_binary = cv2.inRange(frame_hsv, lower_bound, upper_bound)\n",
    "\n",
    " \n",
    "\n",
    "    check_if_fire_detected = cv2.countNonZero(image_binary)\n",
    "\n",
    "   \n",
    "\n",
    "    if int(check_if_fire_detected) >= 20000 :\n",
    "\n",
    "        cv2.putText(frame,\"Fire Detected !\",(300,60),cv2.FONT_HERSHEY_COMPLEX,3,(0,0,255),2)\n",
    "\n",
    "      \n",
    "\n",
    " \n",
    "\n",
    "    cv2.imshow(\"Fire Detection\",frame)\n",
    "\n",
    " \n",
    "\n",
    "    if cv2.waitKey(10) == 27 :\n",
    "\n",
    "        break\n",
    "\n",
    " \n",
    "\n",
    "live_Camera.release()\n",
    "\n",
    "cv2.destroyAllWindows()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
